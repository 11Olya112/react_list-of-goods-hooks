{"version":3,"sources":["App.tsx","GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","preparedGoods","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","shouldRenderResetButton","className","type","classnames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,SDHFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAWL,IAyBaM,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAkBMC,EA7CkB,SACxBX,EADwB,GAGpB,IADFS,EACC,EADDA,SAAUH,EACT,EADSA,WAGNM,EAAY,YAAOZ,GAiBzB,OAfAY,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQN,GACN,KAAKX,EAASkB,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAwBLS,CAAkBlB,EAAiB,CAAEM,WAAUH,eAE3CgB,EAA2Bb,IAAaX,EAASU,MAAQF,EAE/D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYhB,IAAaX,EAASkB,UAGtCU,QA3BoB,WAC1BhB,EAAYZ,EAASkB,UAmBjB,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYhB,IAAaX,EAASoB,SAGtCQ,QAnCmB,WACzBhB,EAAYZ,EAASoB,SA2BjB,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYhB,IAAaX,EAASU,OAGtCkB,QAvDQ,WACdnB,GAAYD,IA+CR,qBAYCgB,GAEC,wBACEE,KAAK,SACLD,UAAWE,IACT,mBAAoB,CAClB,YAAanB,IAGjBoB,QAzDY,WACpBhB,EAAYZ,EAASU,OAiDf,sBAcJ,6BACE,cAAC,EAAD,CAAWR,MAAOW,UErI1BgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9d75943.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\nimport { GoodsList } from './GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getReorderedGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a:string, b: string): number => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const handleSortByAlpabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const resetSortType = () => {\n    setSortType(SortType.NONE);\n  };\n\n  const preparedGoods\n  = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const shouldRenderResetButton = (sortType !== SortType.NONE || isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={handleSortByAlpabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classnames(\n            'button is-warning', {\n              'is-light': sortType !== SortType.NONE,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {shouldRenderResetButton\n        && (\n          <button\n            type=\"button\"\n            className={classnames(\n              'button is-danger', {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={resetSortType}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <GoodsList goods={preparedGoods} />\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\n  type Props = {\n    goods: string[];\n  };\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}